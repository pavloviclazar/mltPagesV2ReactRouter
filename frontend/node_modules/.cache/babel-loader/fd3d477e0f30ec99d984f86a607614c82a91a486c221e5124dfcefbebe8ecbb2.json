{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mltpagev2/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EvenetDetailPage() {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_s(EvenetDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EvenetDetailPage;\nexport default EvenetDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action() {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://laocalhost:8080/events\" + eventId);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EvenetDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","EventItem","EvenetDetailPage","data","event","loader","request","params","id","eventId","response","fetch","ok","message","status","action"],"sources":["/Users/mac/Documents/mltpagev2/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect } from \"react-router-dom\";\n\nimport EventItem from \"../components/EventItem\";\n\nfunction EvenetDetailPage() {\n  const data = useRouteLoaderData(\"event-detail\");\n\n  return <EventItem event={data.event} />;\n}\n\nexport default EvenetDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event.\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\n\nexport async function action() {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://laocalhost:8080/events\" + eventId);\n\n  if (!response.ok) {\n    throw json({ message: \"Could not delete event.\" }, { status: 500 });\n  }\n  return redirect(\"/events\");\n}\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAErE,OAAOC,SAAS,MAAM,yBAAyB;AAAC;AAEhD,SAASC,gBAAgB,GAAG;EAAA;EAC1B,MAAMC,IAAI,GAAGL,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAO,QAAC,SAAS;IAAC,KAAK,EAAEK,IAAI,CAACC;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AACzC;AAAC,GAJQF,gBAAgB;EAAA,QACVJ,kBAAkB;AAAA;AAAA,KADxBI,gBAAgB;AAMzB,eAAeA,gBAAgB;AAE/B,OAAO,eAAeG,MAAM,OAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC;EAC9C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CACR;MAAEc,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAAC,CAChB;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeK,MAAM,GAAG;EAC7B,MAAMN,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,CAAC;EAEvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMb,IAAI,CAAC;MAAEc,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE;EACA,OAAOd,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}